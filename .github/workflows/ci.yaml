name: CI

on:
  push:
    branches:
      - "main"
    tags:
      - v*
  pull_request:
    branches:
      - "main"

jobs:
  check-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/python-poetry
      - run: poetry run isort --profile=black --check .

  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/python-poetry
      - run: poetry run black --check .

  check-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/python-poetry
      - run: poetry run pylint program_sync

  check-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/python-poetry
      - run: poetry run mypy program_sync

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [check-imports, check-formatting, check-linter, check-types]
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - uses: aws-actions/amazon-ecr-login@v1
        id: ecr_login
      - run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        env:
          ECR_REGISTRY: ${{ steps.ecr_login.outputs.registry }}
          ECR_REPOSITORY: account-exporter
          IMAGE_TAG: ${{ github.ref_name }}
